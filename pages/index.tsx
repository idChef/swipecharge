import Head from "next/head";
import { Inter } from "@next/font/google";
import { getSession, useSession } from "next-auth/react";
import { GetServerSideProps } from "next";
import { NextRouter } from "next/router";
import Image from "next/image";
import useSWR from "swr";
import { Skeleton } from "components/common/Skeleton/Skeleton";
import Link from "next/link";
import { BudgetInput } from "components/Budget";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
    const { data: session } = useSession();

    const { data, isLoading } = useSWR(
        `/api/activities/swipe/remaining?userId=${session?.user?.id}`
    );

    return (
        <>
            <Head>
                <title>SwipeCharge</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="flex items-center justify-between">
                <div className="flex flex-col">
                    <span className="text-black dark:text-white">
                        Hi {session?.user?.name} ðŸ‘‹
                    </span>
                    <h1 className="text-3xl text-black dark:text-white">
                        Manage your finances
                    </h1>
                </div>
                <div className="relative h-10 w-10 overflow-hidden rounded-full">
                    {session && (
                        <Image
                            src={session?.user.image || ""}
                            alt={session?.user.name || ""}
                            fill
                        />
                    )}
                </div>
            </div>
      

            {isLoading ? (
                <Skeleton className="mt-4 h-20 w-full" />
            ) : (
                <Link href="/activities/swipe" draggable="false">
                    <div className="mt-4 flex cursor-pointer items-center rounded-md px-4 py-4 text-white dark:bg-white dark:text-black">
                        <div className="flex flex-col">
                            <span className="text-lg font-medium">
                                Activities
                            </span>
                            {data?.length} left to settle
                        </div>
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            className="ml-auto h-8 w-8"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M8.25 4.5l7.5 7.5-7.5 7.5"
                            />
                        </svg>
                    </div>
                </Link>
            )}
        </>
    );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
    // Check if user session is available
    const session = await getSession(context);
    const route = context.resolvedUrl as unknown as NextRouter;

    if (!session) {
        return {
            redirect: {
                destination: `/login`,
                permanent: false,
            },
        };
    }

    return {
        props: {},
    };
};
